{
  "stats": {
    "suites": 5,
    "tests": 12,
    "passes": 12,
    "pending": 0,
    "failures": 0,
    "start": "2017-03-17T02:00:46.104Z",
    "end": "2017-03-17T02:00:50.051Z",
    "duration": 3947,
    "testsRegistered": 12,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Test Todo APIs",
        "suites": [
          {
            "title": "test POST",
            "suites": [],
            "tests": [
              {
                "title": "Success Todo Save",
                "fullTitle": "Test Todo APIs test POST Success Todo Save",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var text = \"Testing Text\";\nrequest(server.nodeApp)\n    .post('/todos')\n    .send({text})\n    .expect(200)\n    .expect((response)=>{\n        expect(response.body.text).toBeA('string').toBe(text);\n    })\n    .end((err,res)=>{\n        if(err){\n            return done(err);\n        }\n        Todo.find({text}).then((todos)=>{\n            expect(todos.length).toBe(1);\n            expect(todos[0].text).toBe(text);\n            done();\n        }).catch((error)=>{\n            done(error);\n        })\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "20c615f3-cd86-4f57-ad2f-6a6af18ebac5",
                "parentUUID": "a004c3cf-d8cb-4979-802a-55ea0a018cfa",
                "skipped": false
              },
              {
                "title": "Fail Todo Save with Empty Text",
                "fullTitle": "Test Todo APIs test POST Fail Todo Save with Empty Text",
                "timedOut": false,
                "duration": 109,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n    .post('/todos')\n    .send({})\n    .expect(400)\n    .end((err,res) => {\n        if(err){\n            return done(err);\n        }\n        Todo.find().then((todos)=>{\n            expect(todos.length).toBe(2);\n            done();\n        }).catch((error)=> done(error));\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "858048d5-64c5-481b-b13c-c106c21ddd46",
                "parentUUID": "a004c3cf-d8cb-4979-802a-55ea0a018cfa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/server/server.todo.test.js",
            "uuid": "a004c3cf-d8cb-4979-802a-55ea0a018cfa",
            "fullFile": "/Users/supercheng/GitHub/node/node-execs/todo-api/server/server.todo.test.js",
            "passes": [
              {
                "title": "Success Todo Save",
                "fullTitle": "Test Todo APIs test POST Success Todo Save",
                "timedOut": false,
                "duration": 283,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var text = \"Testing Text\";\nrequest(server.nodeApp)\n    .post('/todos')\n    .send({text})\n    .expect(200)\n    .expect((response)=>{\n        expect(response.body.text).toBeA('string').toBe(text);\n    })\n    .end((err,res)=>{\n        if(err){\n            return done(err);\n        }\n        Todo.find({text}).then((todos)=>{\n            expect(todos.length).toBe(1);\n            expect(todos[0].text).toBe(text);\n            done();\n        }).catch((error)=>{\n            done(error);\n        })\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "20c615f3-cd86-4f57-ad2f-6a6af18ebac5",
                "parentUUID": "a004c3cf-d8cb-4979-802a-55ea0a018cfa",
                "skipped": false
              },
              {
                "title": "Fail Todo Save with Empty Text",
                "fullTitle": "Test Todo APIs test POST Fail Todo Save with Empty Text",
                "timedOut": false,
                "duration": 109,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n    .post('/todos')\n    .send({})\n    .expect(400)\n    .end((err,res) => {\n        if(err){\n            return done(err);\n        }\n        Todo.find().then((todos)=>{\n            expect(todos.length).toBe(2);\n            done();\n        }).catch((error)=> done(error));\n    });",
                "err": {},
                "isRoot": false,
                "uuid": "858048d5-64c5-481b-b13c-c106c21ddd46",
                "parentUUID": "a004c3cf-d8cb-4979-802a-55ea0a018cfa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 392,
            "rootEmpty": false
          },
          {
            "title": "test GET",
            "suites": [],
            "tests": [
              {
                "title": "should GET all todos && statusCode_OK_200",
                "fullTitle": "Test Todo APIs test GET should GET all todos && statusCode_OK_200",
                "timedOut": false,
                "duration": 102,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.get('/todos')\n.expect(200)\n.expect((resp)=> {\n    expect(resp.body.todos.length).toBe(2);\n})\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "ecc6988c-d1b9-4959-aa80-2cee8c02718b",
                "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
                "skipped": false
              },
              {
                "title": "should GET a todo && statusCode_OK_200",
                "fullTitle": "Test Todo APIs test GET should GET a todo && statusCode_OK_200",
                "timedOut": false,
                "duration": 127,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.get('/todos/' + todos[0]._id.toHexString())\n.expect(200)\n.expect((resp)=>{\n  expect(resp.body.text).toBe(todos[0].text);\n})\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "1c5b0392-264a-4208-b05f-dad144f299a6",
                "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
                "skipped": false
              },
              {
                "title": "should not GET a todo & 404",
                "fullTitle": "Test Todo APIs test GET should not GET a todo & 404",
                "timedOut": false,
                "duration": 101,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.get('/todos/' + new ObjectID().toHexString())\n.expect(404)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "99cabc2d-5137-4896-9771-14e0a5b60286",
                "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
                "skipped": false
              },
              {
                "title": "should GET - BadInput & statusCode_BadClientRequest_400",
                "fullTitle": "Test Todo APIs test GET should GET - BadInput & statusCode_BadClientRequest_400",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.get('/todos/123')\n.expect(400)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "40dc4079-7c76-4e19-9d3f-54c368d2c829",
                "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/server/server.todo.test.js",
            "uuid": "0944b81b-010f-415c-81b9-898f858d2db4",
            "fullFile": "/Users/supercheng/GitHub/node/node-execs/todo-api/server/server.todo.test.js",
            "passes": [
              {
                "title": "should GET all todos && statusCode_OK_200",
                "fullTitle": "Test Todo APIs test GET should GET all todos && statusCode_OK_200",
                "timedOut": false,
                "duration": 102,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.get('/todos')\n.expect(200)\n.expect((resp)=> {\n    expect(resp.body.todos.length).toBe(2);\n})\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "ecc6988c-d1b9-4959-aa80-2cee8c02718b",
                "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
                "skipped": false
              },
              {
                "title": "should GET a todo && statusCode_OK_200",
                "fullTitle": "Test Todo APIs test GET should GET a todo && statusCode_OK_200",
                "timedOut": false,
                "duration": 127,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.get('/todos/' + todos[0]._id.toHexString())\n.expect(200)\n.expect((resp)=>{\n  expect(resp.body.text).toBe(todos[0].text);\n})\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "1c5b0392-264a-4208-b05f-dad144f299a6",
                "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
                "skipped": false
              },
              {
                "title": "should not GET a todo & 404",
                "fullTitle": "Test Todo APIs test GET should not GET a todo & 404",
                "timedOut": false,
                "duration": 101,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.get('/todos/' + new ObjectID().toHexString())\n.expect(404)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "99cabc2d-5137-4896-9771-14e0a5b60286",
                "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
                "skipped": false
              },
              {
                "title": "should GET - BadInput & statusCode_BadClientRequest_400",
                "fullTitle": "Test Todo APIs test GET should GET - BadInput & statusCode_BadClientRequest_400",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.get('/todos/123')\n.expect(400)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "40dc4079-7c76-4e19-9d3f-54c368d2c829",
                "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 336,
            "rootEmpty": false
          },
          {
            "title": "test UPDATE",
            "suites": [],
            "tests": [
              {
                "title": "should UPDATE a todo & statusCode_OK_200",
                "fullTitle": "Test Todo APIs test UPDATE should UPDATE a todo & statusCode_OK_200",
                "timedOut": false,
                "duration": 113,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var text = 'Writing Node Test Cases';\nrequest(server.nodeApp)\n.patch('/todos/' + todos[0]._id.toHexString())\n.send({ text })\n.expect((returnVal)=>{\n  // console.log('---------: ' + JSON.stringify(returnVal.body,undefined,2));\n  expect(returnVal.body.text).toBeA('string').toBe(text);\n})\n.expect(200)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "25aed37a-74d3-4533-9f0f-143cc6a02069",
                "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
                "skipped": false
              },
              {
                "title": "should not UPDATE a todo & 404",
                "fullTitle": "Test Todo APIs test UPDATE should not UPDATE a todo & 404",
                "timedOut": false,
                "duration": 99,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var tempText = {\n  text: 'Writing Node Test Cases'\n};\nrequest(server.nodeApp)\n.patch('/todos/' + new ObjectID().toHexString())\n//.send({tempText})\n.expect(404)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "24fc9a43-e7ca-419d-a8f0-263ca3e1aed5",
                "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
                "skipped": false
              },
              {
                "title": "should not UPDATE a todo & statusCode_BadClientRequest_400",
                "fullTitle": "Test Todo APIs test UPDATE should not UPDATE a todo & statusCode_BadClientRequest_400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var tempText = {\n  text: 'Writing Node Test Cases'\n};\nrequest(server.nodeApp)\n.patch('/todos/' + '123')\n.send({tempText})\n.expect(400)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "b870e0b2-4942-4a07-ba4f-0fcaddb9f3c7",
                "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/server/server.todo.test.js",
            "uuid": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
            "fullFile": "/Users/supercheng/GitHub/node/node-execs/todo-api/server/server.todo.test.js",
            "passes": [
              {
                "title": "should UPDATE a todo & statusCode_OK_200",
                "fullTitle": "Test Todo APIs test UPDATE should UPDATE a todo & statusCode_OK_200",
                "timedOut": false,
                "duration": 113,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var text = 'Writing Node Test Cases';\nrequest(server.nodeApp)\n.patch('/todos/' + todos[0]._id.toHexString())\n.send({ text })\n.expect((returnVal)=>{\n  // console.log('---------: ' + JSON.stringify(returnVal.body,undefined,2));\n  expect(returnVal.body.text).toBeA('string').toBe(text);\n})\n.expect(200)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "25aed37a-74d3-4533-9f0f-143cc6a02069",
                "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
                "skipped": false
              },
              {
                "title": "should not UPDATE a todo & 404",
                "fullTitle": "Test Todo APIs test UPDATE should not UPDATE a todo & 404",
                "timedOut": false,
                "duration": 99,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var tempText = {\n  text: 'Writing Node Test Cases'\n};\nrequest(server.nodeApp)\n.patch('/todos/' + new ObjectID().toHexString())\n//.send({tempText})\n.expect(404)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "24fc9a43-e7ca-419d-a8f0-263ca3e1aed5",
                "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
                "skipped": false
              },
              {
                "title": "should not UPDATE a todo & statusCode_BadClientRequest_400",
                "fullTitle": "Test Todo APIs test UPDATE should not UPDATE a todo & statusCode_BadClientRequest_400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var tempText = {\n  text: 'Writing Node Test Cases'\n};\nrequest(server.nodeApp)\n.patch('/todos/' + '123')\n.send({tempText})\n.expect(400)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "b870e0b2-4942-4a07-ba4f-0fcaddb9f3c7",
                "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 215,
            "rootEmpty": false
          },
          {
            "title": "test DELETE",
            "suites": [],
            "tests": [
              {
                "title": "should DELETE a todo",
                "fullTitle": "Test Todo APIs test DELETE should DELETE a todo",
                "timedOut": false,
                "duration": 104,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.delete('/todos/' + todos[0]._id.toHexString())\n.expect(200)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "7d0db7fc-2949-4184-8519-4a3d29851ba2",
                "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
                "skipped": false
              },
              {
                "title": "should fail DELETE & statusCode_NotFound_404",
                "fullTitle": "Test Todo APIs test DELETE should fail DELETE & statusCode_NotFound_404",
                "timedOut": false,
                "duration": 101,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.delete('/todos/' + new ObjectID().toHexString())\n.expect(404)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "038a31bc-6867-490f-8081-41b204c47e3f",
                "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
                "skipped": false
              },
              {
                "title": "should fail DELETE & statusCode_BadClientRequest_400",
                "fullTitle": "Test Todo APIs test DELETE should fail DELETE & statusCode_BadClientRequest_400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.delete('/todos/' + 'BADINPUT')\n.expect(400)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "79359ec3-bb8d-4236-b0a8-142320a0d819",
                "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/server/server.todo.test.js",
            "uuid": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
            "fullFile": "/Users/supercheng/GitHub/node/node-execs/todo-api/server/server.todo.test.js",
            "passes": [
              {
                "title": "should DELETE a todo",
                "fullTitle": "Test Todo APIs test DELETE should DELETE a todo",
                "timedOut": false,
                "duration": 104,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.delete('/todos/' + todos[0]._id.toHexString())\n.expect(200)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "7d0db7fc-2949-4184-8519-4a3d29851ba2",
                "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
                "skipped": false
              },
              {
                "title": "should fail DELETE & statusCode_NotFound_404",
                "fullTitle": "Test Todo APIs test DELETE should fail DELETE & statusCode_NotFound_404",
                "timedOut": false,
                "duration": 101,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.delete('/todos/' + new ObjectID().toHexString())\n.expect(404)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "038a31bc-6867-490f-8081-41b204c47e3f",
                "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
                "skipped": false
              },
              {
                "title": "should fail DELETE & statusCode_BadClientRequest_400",
                "fullTitle": "Test Todo APIs test DELETE should fail DELETE & statusCode_BadClientRequest_400",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request(server.nodeApp)\n.delete('/todos/' + 'BADINPUT')\n.expect(400)\n.end(done);",
                "err": {},
                "isRoot": false,
                "uuid": "79359ec3-bb8d-4236-b0a8-142320a0d819",
                "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 208,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/server/server.todo.test.js",
        "uuid": "814ce657-4b85-4bf8-851e-b436a013fdf2",
        "fullFile": "/Users/supercheng/GitHub/node/node-execs/todo-api/server/server.todo.test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "650029af-ebf5-426a-98dd-841b6501649b",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "Success Todo Save",
      "fullTitle": "test POST Success Todo Save",
      "timedOut": false,
      "duration": 283,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var text = \"Testing Text\";\nrequest(server.nodeApp)\n    .post('/todos')\n    .send({text})\n    .expect(200)\n    .expect((response)=>{\n        expect(response.body.text).toBeA('string').toBe(text);\n    })\n    .end((err,res)=>{\n        if(err){\n            return done(err);\n        }\n        Todo.find({text}).then((todos)=>{\n            expect(todos.length).toBe(1);\n            expect(todos[0].text).toBe(text);\n            done();\n        }).catch((error)=>{\n            done(error);\n        })\n    });",
      "err": {},
      "isRoot": false,
      "uuid": "20c615f3-cd86-4f57-ad2f-6a6af18ebac5",
      "parentUUID": "a004c3cf-d8cb-4979-802a-55ea0a018cfa",
      "skipped": false
    },
    {
      "title": "Fail Todo Save with Empty Text",
      "fullTitle": "test POST Fail Todo Save with Empty Text",
      "timedOut": false,
      "duration": 109,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n    .post('/todos')\n    .send({})\n    .expect(400)\n    .end((err,res) => {\n        if(err){\n            return done(err);\n        }\n        Todo.find().then((todos)=>{\n            expect(todos.length).toBe(2);\n            done();\n        }).catch((error)=> done(error));\n    });",
      "err": {},
      "isRoot": false,
      "uuid": "858048d5-64c5-481b-b13c-c106c21ddd46",
      "parentUUID": "a004c3cf-d8cb-4979-802a-55ea0a018cfa",
      "skipped": false
    },
    {
      "title": "should GET all todos && statusCode_OK_200",
      "fullTitle": "test GET should GET all todos && statusCode_OK_200",
      "timedOut": false,
      "duration": 102,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.get('/todos')\n.expect(200)\n.expect((resp)=> {\n    expect(resp.body.todos.length).toBe(2);\n})\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "ecc6988c-d1b9-4959-aa80-2cee8c02718b",
      "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
      "skipped": false
    },
    {
      "title": "should GET a todo && statusCode_OK_200",
      "fullTitle": "test GET should GET a todo && statusCode_OK_200",
      "timedOut": false,
      "duration": 127,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.get('/todos/' + todos[0]._id.toHexString())\n.expect(200)\n.expect((resp)=>{\n  expect(resp.body.text).toBe(todos[0].text);\n})\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "1c5b0392-264a-4208-b05f-dad144f299a6",
      "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
      "skipped": false
    },
    {
      "title": "should not GET a todo & 404",
      "fullTitle": "test GET should not GET a todo & 404",
      "timedOut": false,
      "duration": 101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.get('/todos/' + new ObjectID().toHexString())\n.expect(404)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "99cabc2d-5137-4896-9771-14e0a5b60286",
      "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
      "skipped": false
    },
    {
      "title": "should GET - BadInput & statusCode_BadClientRequest_400",
      "fullTitle": "test GET should GET - BadInput & statusCode_BadClientRequest_400",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.get('/todos/123')\n.expect(400)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "40dc4079-7c76-4e19-9d3f-54c368d2c829",
      "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
      "skipped": false
    },
    {
      "title": "should UPDATE a todo & statusCode_OK_200",
      "fullTitle": "test UPDATE should UPDATE a todo & statusCode_OK_200",
      "timedOut": false,
      "duration": 113,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var text = 'Writing Node Test Cases';\nrequest(server.nodeApp)\n.patch('/todos/' + todos[0]._id.toHexString())\n.send({ text })\n.expect((returnVal)=>{\n  // console.log('---------: ' + JSON.stringify(returnVal.body,undefined,2));\n  expect(returnVal.body.text).toBeA('string').toBe(text);\n})\n.expect(200)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "25aed37a-74d3-4533-9f0f-143cc6a02069",
      "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
      "skipped": false
    },
    {
      "title": "should not UPDATE a todo & 404",
      "fullTitle": "test UPDATE should not UPDATE a todo & 404",
      "timedOut": false,
      "duration": 99,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var tempText = {\n  text: 'Writing Node Test Cases'\n};\nrequest(server.nodeApp)\n.patch('/todos/' + new ObjectID().toHexString())\n//.send({tempText})\n.expect(404)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "24fc9a43-e7ca-419d-a8f0-263ca3e1aed5",
      "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
      "skipped": false
    },
    {
      "title": "should not UPDATE a todo & statusCode_BadClientRequest_400",
      "fullTitle": "test UPDATE should not UPDATE a todo & statusCode_BadClientRequest_400",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var tempText = {\n  text: 'Writing Node Test Cases'\n};\nrequest(server.nodeApp)\n.patch('/todos/' + '123')\n.send({tempText})\n.expect(400)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "b870e0b2-4942-4a07-ba4f-0fcaddb9f3c7",
      "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
      "skipped": false
    },
    {
      "title": "should DELETE a todo",
      "fullTitle": "test DELETE should DELETE a todo",
      "timedOut": false,
      "duration": 104,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.delete('/todos/' + todos[0]._id.toHexString())\n.expect(200)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "7d0db7fc-2949-4184-8519-4a3d29851ba2",
      "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
      "skipped": false
    },
    {
      "title": "should fail DELETE & statusCode_NotFound_404",
      "fullTitle": "test DELETE should fail DELETE & statusCode_NotFound_404",
      "timedOut": false,
      "duration": 101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.delete('/todos/' + new ObjectID().toHexString())\n.expect(404)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "038a31bc-6867-490f-8081-41b204c47e3f",
      "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
      "skipped": false
    },
    {
      "title": "should fail DELETE & statusCode_BadClientRequest_400",
      "fullTitle": "test DELETE should fail DELETE & statusCode_BadClientRequest_400",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.delete('/todos/' + 'BADINPUT')\n.expect(400)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "79359ec3-bb8d-4236-b0a8-142320a0d819",
      "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "Success Todo Save",
      "fullTitle": "test POST Success Todo Save",
      "timedOut": false,
      "duration": 283,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var text = \"Testing Text\";\nrequest(server.nodeApp)\n    .post('/todos')\n    .send({text})\n    .expect(200)\n    .expect((response)=>{\n        expect(response.body.text).toBeA('string').toBe(text);\n    })\n    .end((err,res)=>{\n        if(err){\n            return done(err);\n        }\n        Todo.find({text}).then((todos)=>{\n            expect(todos.length).toBe(1);\n            expect(todos[0].text).toBe(text);\n            done();\n        }).catch((error)=>{\n            done(error);\n        })\n    });",
      "err": {},
      "isRoot": false,
      "uuid": "20c615f3-cd86-4f57-ad2f-6a6af18ebac5",
      "parentUUID": "a004c3cf-d8cb-4979-802a-55ea0a018cfa",
      "skipped": false
    },
    {
      "title": "Fail Todo Save with Empty Text",
      "fullTitle": "test POST Fail Todo Save with Empty Text",
      "timedOut": false,
      "duration": 109,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n    .post('/todos')\n    .send({})\n    .expect(400)\n    .end((err,res) => {\n        if(err){\n            return done(err);\n        }\n        Todo.find().then((todos)=>{\n            expect(todos.length).toBe(2);\n            done();\n        }).catch((error)=> done(error));\n    });",
      "err": {},
      "isRoot": false,
      "uuid": "858048d5-64c5-481b-b13c-c106c21ddd46",
      "parentUUID": "a004c3cf-d8cb-4979-802a-55ea0a018cfa",
      "skipped": false
    },
    {
      "title": "should GET all todos && statusCode_OK_200",
      "fullTitle": "test GET should GET all todos && statusCode_OK_200",
      "timedOut": false,
      "duration": 102,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.get('/todos')\n.expect(200)\n.expect((resp)=> {\n    expect(resp.body.todos.length).toBe(2);\n})\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "ecc6988c-d1b9-4959-aa80-2cee8c02718b",
      "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
      "skipped": false
    },
    {
      "title": "should GET a todo && statusCode_OK_200",
      "fullTitle": "test GET should GET a todo && statusCode_OK_200",
      "timedOut": false,
      "duration": 127,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.get('/todos/' + todos[0]._id.toHexString())\n.expect(200)\n.expect((resp)=>{\n  expect(resp.body.text).toBe(todos[0].text);\n})\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "1c5b0392-264a-4208-b05f-dad144f299a6",
      "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
      "skipped": false
    },
    {
      "title": "should not GET a todo & 404",
      "fullTitle": "test GET should not GET a todo & 404",
      "timedOut": false,
      "duration": 101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.get('/todos/' + new ObjectID().toHexString())\n.expect(404)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "99cabc2d-5137-4896-9771-14e0a5b60286",
      "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
      "skipped": false
    },
    {
      "title": "should GET - BadInput & statusCode_BadClientRequest_400",
      "fullTitle": "test GET should GET - BadInput & statusCode_BadClientRequest_400",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.get('/todos/123')\n.expect(400)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "40dc4079-7c76-4e19-9d3f-54c368d2c829",
      "parentUUID": "0944b81b-010f-415c-81b9-898f858d2db4",
      "skipped": false
    },
    {
      "title": "should UPDATE a todo & statusCode_OK_200",
      "fullTitle": "test UPDATE should UPDATE a todo & statusCode_OK_200",
      "timedOut": false,
      "duration": 113,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var text = 'Writing Node Test Cases';\nrequest(server.nodeApp)\n.patch('/todos/' + todos[0]._id.toHexString())\n.send({ text })\n.expect((returnVal)=>{\n  // console.log('---------: ' + JSON.stringify(returnVal.body,undefined,2));\n  expect(returnVal.body.text).toBeA('string').toBe(text);\n})\n.expect(200)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "25aed37a-74d3-4533-9f0f-143cc6a02069",
      "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
      "skipped": false
    },
    {
      "title": "should not UPDATE a todo & 404",
      "fullTitle": "test UPDATE should not UPDATE a todo & 404",
      "timedOut": false,
      "duration": 99,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var tempText = {\n  text: 'Writing Node Test Cases'\n};\nrequest(server.nodeApp)\n.patch('/todos/' + new ObjectID().toHexString())\n//.send({tempText})\n.expect(404)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "24fc9a43-e7ca-419d-a8f0-263ca3e1aed5",
      "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
      "skipped": false
    },
    {
      "title": "should not UPDATE a todo & statusCode_BadClientRequest_400",
      "fullTitle": "test UPDATE should not UPDATE a todo & statusCode_BadClientRequest_400",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "var tempText = {\n  text: 'Writing Node Test Cases'\n};\nrequest(server.nodeApp)\n.patch('/todos/' + '123')\n.send({tempText})\n.expect(400)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "b870e0b2-4942-4a07-ba4f-0fcaddb9f3c7",
      "parentUUID": "44f7a076-142a-41f4-bee1-cb01cbf08f3a",
      "skipped": false
    },
    {
      "title": "should DELETE a todo",
      "fullTitle": "test DELETE should DELETE a todo",
      "timedOut": false,
      "duration": 104,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.delete('/todos/' + todos[0]._id.toHexString())\n.expect(200)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "7d0db7fc-2949-4184-8519-4a3d29851ba2",
      "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
      "skipped": false
    },
    {
      "title": "should fail DELETE & statusCode_NotFound_404",
      "fullTitle": "test DELETE should fail DELETE & statusCode_NotFound_404",
      "timedOut": false,
      "duration": 101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.delete('/todos/' + new ObjectID().toHexString())\n.expect(404)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "038a31bc-6867-490f-8081-41b204c47e3f",
      "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
      "skipped": false
    },
    {
      "title": "should fail DELETE & statusCode_BadClientRequest_400",
      "fullTitle": "test DELETE should fail DELETE & statusCode_BadClientRequest_400",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request(server.nodeApp)\n.delete('/todos/' + 'BADINPUT')\n.expect(400)\n.end(done);",
      "err": {},
      "isRoot": false,
      "uuid": "79359ec3-bb8d-4236-b0a8-142320a0d819",
      "parentUUID": "9e561804-bdc1-4841-943a-fbde0e2e69dc",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}